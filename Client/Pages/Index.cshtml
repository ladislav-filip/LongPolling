@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">SignalR</h1>
    
    <div class="signalr-demo">
        <form id="message-form">
            <input type="text" id="message-box"/>
        </form>
        <hr />
        <ul id="messages"></ul>
    </div>
    
    <script>
        const messageForm =  document.getElementById('message-form');
        const messageBox = document.getElementById('message-box');
        const messages = document.getElementById('messages');
        
        let startHub;
        
        const connection = new signalR.HubConnectionBuilder()
            .withUrl(
                "https://localhost:5001/notify",
                { 
                    transport: signalR.HttpTransportType.WebSockets 
                }
            )
            .configureLogging(signalR.LogLevel.Information)
            .build();
            
        connection.on('message', (sender, messageText) => {
            console.log(`${sender}:${messageText}`);
            
            const newMessage = document.createElement('li');
            newMessage.appendChild(document.createTextNode(`${sender}:${messageText}`));
            messages.appendChild(newMessage);
        });
        
        connection.onclose(async () => {
            console.log("Close connection.");
            await startHub();
        });
        
        async function fallbackConnected(reason) {
            console.log("fallbackConnected...");
            console.error(reason);
            setTimeout(startHub, 500);
        }
        
        startHub = async function () {    
            console.log("Start hub listening...");
            await connection.start()
                .then(() => console.log('connected!'))
                .catch(fallbackConnected);
        }
            
        messageForm.addEventListener('submit', ev => {
            ev.preventDefault();
            const message = messageBox.value;
            connection.invoke('SendMessage', message);
            messageBox.value = '';
        });
        
        startHub();
        
    </script>
    
</div>